{"ast":null,"code":"import _classCallCheck from \"/Users/vincent/Desktop/CoffeeTawk/vincent/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincent/Desktop/CoffeeTawk/vincent/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincent/Desktop/CoffeeTawk/vincent/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincent/Desktop/CoffeeTawk/vincent/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincent/Desktop/CoffeeTawk/vincent/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/vincent/Desktop/CoffeeTawk/vincent/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/vincent/Desktop/CoffeeTawk/vincent/src/Components/Timer.js\";\nimport React, { Component } from 'react';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timer).call(this, props));\n    _this.state = {\n      time: 0,\n      isOn: false,\n      start: 0\n    };\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stopTimer = _this.stopTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.resetTimer = _this.resetTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      var _this2 = this;\n\n      this.setState({\n        isOn: true,\n        time: this.state.time,\n        start: Date.now() - this.state.time\n      });\n      this.timer = setInterval(function () {\n        return _this2.setState({\n          time: Date.now() - _this2.state.start\n        });\n      }, 1);\n    }\n  }, {\n    key: \"stopTimer\",\n    value: function stopTimer() {\n      this.setState({\n        isOn: false\n      });\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.setState({\n        time: 0,\n        isOn: false\n      });\n    }\n  }, {\n    key: \"pad\",\n    value: function pad(n, width, z) {\n      z = z || '0';\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var start = this.state.time == 0 ? React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"start\") : null;\n      var stop = this.state.time == 0 || !this.state.isOn ? null : React.createElement(\"button\", {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"stop\");\n      var resume = this.state.time == 0 || this.state.isOn ? null : React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"resume\");\n      var reset = this.state.time == 0 || this.state.isOn ? null : React.createElement(\"button\", {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"save\"); // <h1>timer: pad({Math.round(this.state.time/1000)}, 3) : {pad({this.state.time%1000}, 3)}</h1>\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.pad(Math.round(this.state.time / 1000), 3)), start, resume, stop, reset);\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["/Users/vincent/Desktop/CoffeeTawk/vincent/src/Components/Timer.js"],"names":["React","Component","Timer","props","state","time","isOn","start","startTimer","bind","stopTimer","resetTimer","setState","Date","now","timer","setInterval","clearInterval","n","width","z","length","Array","join","stop","resume","reset","pad","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Timer extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        time: 0,\n        isOn: false,\n        start: 0\n      }\n  \n      this.startTimer = this.startTimer.bind(this)\n      this.stopTimer = this.stopTimer.bind(this)\n      this.resetTimer = this.resetTimer.bind(this)\n    }\n  \n    startTimer() {\n      this.setState({\n        isOn: true,\n        time: this.state.time,\n        start: Date.now() - this.state.time\n      })\n      this.timer = setInterval(() => this.setState({\n        time: Date.now() - this.state.start\n      }), 1);\n    }\n  \n    stopTimer() {\n      this.setState({isOn: false})\n      clearInterval(this.timer)\n    }\n  \n    resetTimer() {\n      this.setState({time: 0, isOn: false})\n    }\n\n    pad(n, width, z) {\n      z = z || '0';\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n    }\n  \n    render() {\n  \n      let start = (this.state.time == 0) ?\n        <button onClick={this.startTimer}>start</button> :\n        null\n  \n      let stop = (this.state.time == 0 || !this.state.isOn) ?\n        null :\n        <button onClick={this.stopTimer}>stop</button>\n  \n      let resume = (this.state.time == 0 || this.state.isOn) ?\n        null :\n        <button onClick={this.startTimer}>resume</button>\n  \n      let reset = (this.state.time == 0 || this.state.isOn) ?\n        null :\n        <button onClick={this.resetTimer}>save</button>\n        // <h1>timer: pad({Math.round(this.state.time/1000)}, 3) : {pad({this.state.time%1000}, 3)}</h1>\n\n      return(\n        <div>\n          <p>{this.pad(Math.round(this.state.time/1000), 3)}</p>\n          {start}\n          {resume}\n          {stop}\n          {reset}\n        </div>\n      )\n    }\n  }\n\n  export default Timer"]},"metadata":{},"sourceType":"module"}